name: MLflow CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  train:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: '3.8'
        activate-environment: 'stunting-prediction'
        environment-file: MLProject/conda.yaml
        auto-activate-base: false
    
    - name: Install MLflow
      shell: bash -l {0}
      run: |
        conda init bash
        source ~/.bashrc
        conda activate stunting-prediction
        pip install mlflow
    
    - name: Test DagsHub Connection
      shell: bash -l {0}
      env:
        MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
        MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
      run: |
        conda init bash
        source ~/.bashrc
        conda activate stunting-prediction
        python -c "
        import mlflow
        import os
        mlflow.set_tracking_uri('https://dagshub.com/agummds/Stunting-Toddler.mlflow')
        print('MLflow tracking URI:', mlflow.get_tracking_uri())
        print('Testing connection...')
        try:
            mlflow.search_experiments()
            print('Connection successful!')
        except Exception as e:
            print('Connection failed:', str(e))
            exit(1)
        "
    
    - name: Run MLflow Project
      shell: bash -l {0}
      env:
        MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
        MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        MLFLOW_TRACKING_URI: "https://dagshub.com/agummds/Stunting-Toddler.mlflow"
      run: |
        conda init bash
        source ~/.bashrc
        conda activate stunting-prediction
        mlflow run MLProject \
          --experiment-name "stunting-prediction" \
          --env-manager=conda 